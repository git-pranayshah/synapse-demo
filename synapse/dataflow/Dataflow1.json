{
	"name": "Dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Product",
						"type": "DatasetReference"
					},
					"name": "ProductTable"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable2",
						"type": "DatasetReference"
					},
					"name": "ProductCategory"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "ListPriceToFloat"
				},
				{
					"name": "DiscontinuedDateUTC"
				},
				{
					"name": "join1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          Weight as decimal(8,2),",
				"          ProductCategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          ThumbNailPhoto as binary,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductTable",
				"source(output(",
				"          ProductCategoryID as integer,",
				"          ParentProductCategoryID as integer,",
				"          Name as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductCategory",
				"ProductTable cast(output(",
				"          ListPrice as float '$###.##'",
				"     ),",
				"     errors: true) ~> ListPriceToFloat",
				"ListPriceToFloat derive(SellStartDateUTC = case(isNull(SellStartDate) , currentUTC(), toUTC(SellStartDate))) ~> DiscontinuedDateUTC",
				"DiscontinuedDateUTC, ProductCategory join(ProductTable@ProductCategoryID == ProductCategory@ProductCategoryID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          ProductID,",
				"          Name = ProductTable@Name,",
				"          ProductNumber,",
				"          Color,",
				"          StandardCost,",
				"          ListPrice = ProductTable@ListPrice,",
				"          Size,",
				"          Weight,",
				"          ProductCategoryID = ProductTable@ProductCategoryID,",
				"          ProductModelID,",
				"          SellStartDate = ListPrice,",
				"          SellEndDate = SellStartDateUTC,",
				"          DiscontinuedDate = DiscontinuedDateUTC,",
				"          ThumbNailPhoto,",
				"          ThumbnailPhotoFileName,",
				"          rowguid = ProductTable@rowguid,",
				"          ModifiedDate = ProductTable@ModifiedDate,",
				"          ProductCategoryID = ProductCategory@ProductCategoryID,",
				"          ParentProductCategoryID,",
				"          Name = ProductCategory@Name,",
				"          rowguid = ProductCategory@rowguid,",
				"          ModifiedDate = ProductCategory@ModifiedDate",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}